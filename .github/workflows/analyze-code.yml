name: Update Lines of Code in Readme

on:
    schedule:
        - cron: "0 0 * * 0" # Runs weekly on Sunday at midnight (UTC)
    workflow_dispatch: # Allows manual trigger

jobs:
    count-lines:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            # Install required dependencies: jq (JSON processor), cloc (count lines of code), and locale settings
            - name: Install Dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y jq cloc locales
                  sudo locale-gen en_US.UTF-8

            # Fetch public repositories (excluding forks) and clone only the default branch
            - name: Fetch and Clone Repositories
              env:
                  GH_PAT: ${{ secrets.GH_PAT }}
              run: |
                  USERNAME="arhamkhnz"

                  # Get a list of public repositories that are not forks
                  REPOS=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/user/repos?per_page=100" | jq -r '.[] | select(.fork == false) | .full_name') || echo "Error fetching repositories"

                  mkdir -p public-repos
                  cd public-repos

                  for REPO in $REPOS; do
                    REPO_URL="https://github.com/$REPO.git"
                    AUTHENTICATED_REPO=$(echo "$REPO_URL" | sed "s/https:\/\//https:\/\/$GH_PAT@/g")
                    
                    # Determine the default branch dynamically and clone only that branch
                    DEFAULT_BRANCH=$(curl -H "Authorization: token $GH_PAT" -s "https://api.github.com/repos/$REPO" | jq -r '.default_branch')

                    echo "Cloning $REPO (default branch: $DEFAULT_BRANCH)..."
                    git clone --branch "$DEFAULT_BRANCH" --single-branch "$AUTHENTICATED_REPO" "$(basename $REPO)-$DEFAULT_BRANCH" || echo "Failed to clone $REPO."
                  done

                  # Run cloc to analyze lines of code, excluding non-source code files
                  echo "Calculating lines of code..."
                  mkdir -p ../output
                  cloc . --exclude-ext=json,html,css,svg,md,py,ps1,scss --json > ../output/cloc-output.json

            # Commit and push the updated cloc-output.json and README.md to the current branch
            - name: Commit and Push Output
              env:
                  GH_PAT: ${{ secrets.GH_PAT }}
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

                  git add output/cloc-output.json
                  git commit -m "chore: update cloc-output.json with latest code stats" || echo "No changes to commit"
                  git push origin HEAD
